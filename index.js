require('dotenv').config();
const { Telegraf, Markup } = require('telegraf');
const cron = require('node-cron');
const connectDB = require('./db/connection');
const Website = require('./models/Website');
const { checkAllWebsites, checkWebsite } = require('./services/monitorService');

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
connectDB();

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
const bot = new Telegraf(process.env.BOT_TOKEN);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
function getMainMenu() {
    return Markup.keyboard([
        ['üÜï –î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç', 'üìã –°–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤'],
        ['üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–π—á–∞—Å', 'üìä –°—Ç–∞—Ç—É—Å'],
        ['‚ùì –ü–æ–º–æ—â—å']
    ]).resize();
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.start(async (ctx) => {
    await ctx.reply(
        '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–æ–≤.\n' +
        '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n' +
        '/add - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å–∞–π—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞\n' +
        '/list - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Å–∞–π—Ç–æ–≤\n' +
        '/check - –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ —Å–∞–π—Ç—ã\n' +
        '/help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É',
        getMainMenu()
    );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
bot.help((ctx) => {
    ctx.reply(
        '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n' +
        '/add - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å–∞–π—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞\n' +
        '/list - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Å–∞–π—Ç–æ–≤\n' +
        '/edit <id> - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∞–π—Ç\n' +
        '/delete <id> - —É–¥–∞–ª–∏—Ç—å —Å–∞–π—Ç –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞\n' +
        '/check - –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ —Å–∞–π—Ç—ã\n' +
        '/status - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–∞–π—Ç–æ–≤',
        getMainMenu()
    );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
bot.hears('üÜï –î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç', (ctx) => {
    ctx.reply('–í–≤–µ–¥–∏—Ç–µ URL —Å–∞–π—Ç–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (—Å http:// –∏–ª–∏ https://):');
    const chatId = ctx.chat.id.toString();
    userSessions[chatId] = { state: 'ADD_WAITING_URL' };
});

bot.hears('üìã –°–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤', async (ctx) => {
    await listWebsites(ctx);
});

bot.hears('üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–π—á–∞—Å', async (ctx) => {
    await checkNow(ctx);
});

bot.hears('üìä –°—Ç–∞—Ç—É—Å', async (ctx) => {
    await showStatus(ctx);
});

bot.hears('‚ùì –ü–æ–º–æ—â—å', (ctx) => {
    ctx.reply(
        '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n' +
        '‚Ä¢ üÜï –î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å–∞–π—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞\n' +
        '‚Ä¢ üìã –°–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤ - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Å–∞–π—Ç–æ–≤\n' +
        '‚Ä¢ üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–π—á–∞—Å - –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ —Å–∞–π—Ç—ã\n' +
        '‚Ä¢ üìä –°—Ç–∞—Ç—É—Å - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–∞–π—Ç–æ–≤\n\n' +
        '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n' +
        '/edit <id> - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∞–π—Ç\n' +
        '/delete <id> - —É–¥–∞–ª–∏—Ç—å —Å–∞–π—Ç –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞',
        getMainMenu()
    );
});

// –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ—Å—Å–∏–π
const userSessions = {};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /add
bot.command('add', (ctx) => {
    const chatId = ctx.chat.id.toString();
    userSessions[chatId] = { state: 'ADD_WAITING_URL' };

    ctx.reply('–í–≤–µ–¥–∏—Ç–µ URL —Å–∞–π—Ç–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (—Å http:// –∏–ª–∏ https://):');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–≤–æ–¥–∞ URL –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞
bot.on('text', async (ctx) => {
    const chatId = ctx.chat.id.toString();
    const text = ctx.message.text;

    // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞, –Ω–µ –∫–Ω–æ–ø–∫–∞ –º–µ–Ω—é –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–¥–Ω–æ–º –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    if (!text.startsWith('/') && !['üÜï –î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç', 'üìã –°–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤', 'üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ–π—á–∞—Å', 'üìä –°—Ç–∞—Ç—É—Å', '‚ùì –ü–æ–º–æ—â—å'].includes(text) && userSessions[chatId]) {
        const session = userSessions[chatId];

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–∞–π—Ç–∞
        if (session.state === 'ADD_WAITING_URL') {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ URL
            if (!text.match(/^https?:\/\/.+/)) {
                return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL —Å http:// –∏–ª–∏ https://', getMainMenu());
            }

            session.url = text;
            session.state = 'ADD_WAITING_NAME';
            return ctx.reply('–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ —Å–∞–π—Ç–∞:');
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–∞–π—Ç–∞
        if (session.state === 'ADD_WAITING_NAME') {
            session.name = text;

            try {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ —É–∂–µ —ç—Ç–æ—Ç URL
                const existingWebsite = await Website.findOne({ url: session.url });

                if (existingWebsite) {
                    // –ï—Å–ª–∏ —Å–∞–π—Ç —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è, –¥–æ–±–∞–≤–ª—è–µ–º chatId –≤ —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
                    if (!existingWebsite.chatIds.includes(chatId)) {
                        existingWebsite.chatIds.push(chatId);
                        await existingWebsite.save();
                        ctx.reply(`–°–∞–π—Ç "${existingWebsite.name}" —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è, –≤—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫ —Å–ø–∏—Å–∫—É –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.`, getMainMenu());
                    } else {
                        ctx.reply(`–í—ã —É–∂–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç–µ —Å–∞–π—Ç "${existingWebsite.name}"`, getMainMenu());
                    }
                } else {
                    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–∞–π—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
                    const newWebsite = new Website({
                        url: session.url,
                        name: session.name,
                        chatIds: [chatId]
                    });

                    await newWebsite.save();

                    // –°—Ä–∞–∑—É –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–∞–π—Ç
                    const result = await checkWebsite(newWebsite);
                    await ctx.reply(
                        `–°–∞–π—Ç "${session.name}" –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞!\n` +
                        `–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: ${result.status === 'online' ? '‚úÖ –û–Ω–ª–∞–π–Ω' : '‚ùå –û—Ñ–ª–∞–π–Ω'}\n` +
                        `–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${result.responseTime}ms`,
                        getMainMenu()
                    );
                }

                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
                delete userSessions[chatId];
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞:', error);
                ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', getMainMenu());
                delete userSessions[chatId];
            }
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∞–π—Ç–∞
        if (session.state === 'EDIT_WAITING_NAME' && session.websiteId) {
            try {
                await Website.findByIdAndUpdate(session.websiteId, { name: text });
                ctx.reply(`–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ "${text}"`, getMainMenu());
                delete userSessions[chatId];
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞:', error);
                ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', getMainMenu());
                delete userSessions[chatId];
            }
        }

        if (session.state === 'EDIT_WAITING_URL' && session.websiteId) {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ URL
            if (!text.match(/^https?:\/\/.+/)) {
                return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL —Å http:// –∏–ª–∏ https://');
            }

            try {
                await Website.findByIdAndUpdate(session.websiteId, { url: text });
                ctx.reply(`URL —Å–∞–π—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ "${text}"`, getMainMenu());
                delete userSessions[chatId];
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞:', error);
                ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', getMainMenu());
                delete userSessions[chatId];
            }
        }
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–∞–π—Ç–æ–≤
async function listWebsites(ctx) {
    const chatId = ctx.chat.id.toString();

    try {
        const websites = await Website.find({ chatIds: chatId });

        if (websites.length === 0) {
            return ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Å–∞–π—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "üÜï –î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç" –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∞–π—Ç–∞.', getMainMenu());
        }

        let message = '–°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Å–∞–π—Ç–æ–≤:\n\n';

        websites.forEach((site, index) => {
            const statusEmoji = site.status === 'online' ? '‚úÖ' : (site.status === 'offline' ? '‚ùå' : '‚ö†Ô∏è');
            const lastChecked = site.lastChecked ? new Date(site.lastChecked).toLocaleString() : '–ù–∏–∫–æ–≥–¥–∞';

            message += `${index + 1}. ${statusEmoji} ${site.name}\n`;
            message += `   ID: ${site._id}\n`;
            message += `   URL: ${site.url}\n`;
            message += `   –°—Ç–∞—Ç—É—Å: ${site.status}\n`;
            message += `   –ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞: ${lastChecked}\n`;
            if (site.responseTime) {
                message += `   –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${site.responseTime}ms\n`;
            }
            message += '\n';
        });

        // –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–∞–π—Ç–∞
        const inlineKeyboard = [];
        for (const site of websites) {
            inlineKeyboard.push([
                Markup.button.callback(`‚úèÔ∏è –†–µ–¥–∞–∫—Ç. ${site.name}`, `edit_site_${site._id}`),
                Markup.button.callback(`üóëÔ∏è –£–¥–∞–ª–∏—Ç—å ${site.name}`, `delete_site_${site._id}`)
            ]);
        }

        message += '–í—ã–±–µ—Ä–∏—Ç–µ —Å–∞–π—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è:';

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏
        await ctx.reply(message, {
            ...Markup.inlineKeyboard(inlineKeyboard),
            ...getMainMenu()
        });
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Å–∞–π—Ç–æ–≤:', error);
        ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Å–∞–π—Ç–æ–≤.', getMainMenu());
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /list
bot.command('list', async (ctx) => {
    await listWebsites(ctx);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è —Å–∞–π—Ç–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞
bot.action(/edit_site_(.+)/, async (ctx) => {
    const websiteId = ctx.match[1];
    const chatId = ctx.chat.id.toString();

    try {
        const website = await Website.findOne({ _id: websiteId, chatIds: chatId });

        if (!website) {
            return ctx.answerCbQuery('–°–∞–π—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –≤—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤ –Ω–∞ –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.');
        }

        await ctx.reply(
            `–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞ "${website.name}":\n` +
            `URL: ${website.url}\n\n` +
            '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?',
            Markup.inlineKeyboard([
                Markup.button.callback('‚úèÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ', `edit_name_${websiteId}`),
                Markup.button.callback('üîó URL', `edit_url_${websiteId}`)
            ])
        );
        ctx.answerCbQuery();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–∞–π—Ç–∞:', error);
        ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–∞–π—Ç–∞.');
    }
});

bot.action(/delete_site_(.+)/, async (ctx) => {
    const websiteId = ctx.match[1];
    const chatId = ctx.chat.id.toString();

    try {
        const website = await Website.findOne({ _id: websiteId, chatIds: chatId });

        if (!website) {
            return ctx.answerCbQuery('–°–∞–π—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –≤—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤ –Ω–∞ –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–µ.');
        }

        // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
        await ctx.reply(
            `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–∞–π—Ç "${website.name}"?`,
            Markup.inlineKeyboard([
                Markup.button.callback('‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å', `confirm_delete_${websiteId}`),
                Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_delete')
            ])
        );
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞:', error);
        ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞.');
    }
});

bot.action(/confirm_delete_(.+)/, async (ctx) => {
    const websiteId = ctx.match[1];
    const chatId = ctx.chat.id.toString();

    try {
        const website = await Website.findOne({ _id: websiteId, chatIds: chatId });

        if (!website) {
            return ctx.answerCbQuery('–°–∞–π—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –≤—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤ –Ω–∞ –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–µ.');
        }

        // –ï—Å–ª–∏ chatIds —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ç–µ–∫—É—â–∏–π chatId, —É–¥–∞–ª—è–µ–º —Å–∞–π—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é
        if (website.chatIds.length === 1) {
            await Website.findByIdAndDelete(websiteId);
            ctx.reply(`–°–∞–π—Ç "${website.name}" –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.`, getMainMenu());
        } else {
            // –ò–Ω–∞—á–µ —É–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—É—â–∏–π chatId –∏–∑ —Å–ø–∏—Å–∫–∞
            website.chatIds = website.chatIds.filter(id => id !== chatId);
            await website.save();
            ctx.reply(`–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å–∞–π—Ç–∞ "${website.name}".`, getMainMenu());
        }
        ctx.answerCbQuery('–°–∞–π—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞:', error);
        ctx.answerCbQuery('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞.');
        ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞.', getMainMenu());
    }
});

bot.action('cancel_delete', (ctx) => {
    ctx.reply('–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.', getMainMenu());
    ctx.answerCbQuery();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /edit
bot.command('edit', async (ctx) => {
    const chatId = ctx.chat.id.toString();
    const parts = ctx.message.text.split(' ');

    if (parts.length < 2) {
        return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID —Å–∞–π—Ç–∞: /edit <id>', getMainMenu());
    }

    const websiteId = parts[1];

    try {
        const website = await Website.findOne({ _id: websiteId, chatIds: chatId });

        if (!website) {
            return ctx.reply('–°–∞–π—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –≤—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤ –Ω–∞ –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.', getMainMenu());
        }

        await ctx.reply(
            `–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞ "${website.name}":\n` +
            `URL: ${website.url}\n\n` +
            '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?',
            Markup.inlineKeyboard([
                Markup.button.callback('‚úèÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ', `edit_name_${websiteId}`),
                Markup.button.callback('üîó URL', `edit_url_${websiteId}`)
            ])
        );
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–∞–π—Ç–∞:', error);
        ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–∞–π—Ç–∞.', getMainMenu());
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
bot.action(/edit_name_(.+)/, (ctx) => {
    const websiteId = ctx.match[1];
    const chatId = ctx.chat.id.toString();

    userSessions[chatId] = {
        state: 'EDIT_WAITING_NAME',
        websiteId: websiteId
    };

    ctx.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Å–∞–π—Ç–∞:');
    ctx.answerCbQuery();
});

bot.action(/edit_url_(.+)/, (ctx) => {
    const websiteId = ctx.match[1];
    const chatId = ctx.chat.id.toString();

    userSessions[chatId] = {
        state: 'EDIT_WAITING_URL',
        websiteId: websiteId
    };

    ctx.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π URL –¥–ª—è —Å–∞–π—Ç–∞ (—Å http:// –∏–ª–∏ https://):');
    ctx.answerCbQuery();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /delete
bot.command('delete', async (ctx) => {
    const chatId = ctx.chat.id.toString();
    const parts = ctx.message.text.split(' ');

    if (parts.length < 2) {
        return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID —Å–∞–π—Ç–∞: /delete <id>', getMainMenu());
    }

    const websiteId = parts[1];

    try {
        const website = await Website.findOne({ _id: websiteId, chatIds: chatId });

        if (!website) {
            return ctx.reply('–°–∞–π—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –≤—ã –Ω–µ –∏–º–µ–µ—Ç–µ –ø—Ä–∞–≤ –Ω–∞ –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–µ.', getMainMenu());
        }

        // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
        await ctx.reply(
            `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–∞–π—Ç "${website.name}"?`,
            Markup.inlineKeyboard([
                Markup.button.callback('‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å', `confirm_delete_${websiteId}`),
                Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_delete')
            ])
        );
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞:', error);
        ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞.', getMainMenu());
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —Å–∞–π—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function checkNow(ctx) {
    const chatId = ctx.chat.id.toString();

    ctx.reply('–ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Å–µ—Ö —Å–∞–π—Ç–æ–≤...');

    try {
        const websites = await Website.find({ chatIds: chatId });

        if (websites.length === 0) {
            return ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Å–∞–π—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "üÜï –î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç" –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∞–π—Ç–∞.', getMainMenu());
        }

        let checkedCount = 0;
        let offlineCount = 0;
        let message = '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:\n\n';

        for (const website of websites) {
            const result = await checkWebsite(website);
            checkedCount++;

            const statusEmoji = website.status === 'online' ? '‚úÖ' : '‚ùå';
            message += `${statusEmoji} ${website.name} (${website.url}): ${website.status.toUpperCase()}\n`;

            if (website.status === 'offline') {
                offlineCount++;
            }
        }

        message += `\n–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Å–∞–π—Ç–æ–≤: ${checkedCount}`;
        message += `\n–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ: ${offlineCount}`;

        ctx.reply(message, getMainMenu());
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∞–π—Ç–æ–≤:', error);
        ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∞–π—Ç–æ–≤.', getMainMenu());
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /check
bot.command('check', async (ctx) => {
    await checkNow(ctx);
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–∞–π—Ç–æ–≤
async function showStatus(ctx) {
    const chatId = ctx.chat.id.toString();

    try {
        const websites = await Website.find({ chatIds: chatId });

        if (websites.length === 0) {
            return ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Å–∞–π—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "üÜï –î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç" –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∞–π—Ç–∞.', getMainMenu());
        }

        let message = '–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∞–π—Ç–æ–≤:\n\n';
        let onlineCount = 0;
        let offlineCount = 0;

        websites.forEach(website => {
            const statusEmoji = website.status === 'online' ? '‚úÖ' : (website.status === 'offline' ? '‚ùå' : '‚ö†Ô∏è');
            message += `${statusEmoji} ${website.name}: ${website.status.toUpperCase()}\n`;

            if (website.status === 'online') {
                onlineCount++;
            } else if (website.status === 'offline') {
                offlineCount++;
            }
        });

        message += `\n–í—Å–µ–≥–æ —Å–∞–π—Ç–æ–≤: ${websites.length}`;
        message += `\n–û–Ω–ª–∞–π–Ω: ${onlineCount}`;
        message += `\n–û—Ñ–ª–∞–π–Ω: ${offlineCount}`;

        ctx.reply(message, getMainMenu());
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∞–π—Ç–æ–≤:', error);
        ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∞–π—Ç–æ–≤.', getMainMenu());
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status
bot.command('status', async (ctx) => {
    await showStatus(ctx);
});

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —Å–∞–π—Ç–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
async function checkAndNotify() {
    try {
        const results = await checkAllWebsites();

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è
        for (const result of results) {
            if (result.changed) {
                const website = result.website;
                const statusEmoji = result.status === 'online' ? '‚úÖ' : '‚ùå';
                let message = '';

                if (result.status === 'online') {
                    message = `${statusEmoji} –°–∞–π—Ç —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–µ–Ω: ${website.name} (${website.url})\n`;
                    message += `–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${result.responseTime}ms`;
                } else {
                    message = `${statusEmoji} –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${website.name} (${website.url})\n`;
                    if (result.error) {
                        message += `–û—à–∏–±–∫–∞: ${result.error}`;
                    } else {
                        message += `–°—Ç–∞—Ç—É—Å –∫–æ–¥: ${result.statusCode}`;
                    }
                }

                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
                for (const chatId of website.chatIds) {
                    try {
                        await bot.telegram.sendMessage(chatId, message, getMainMenu());
                    } catch (error) {
                        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —á–∞—Ç ${chatId}:`, error);
                    }
                }
            }
        }
        console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
    }
}

// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º cron-–∑–∞–¥–∞—á—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
cron.schedule('*/5 * * * *', () => {
    console.log('–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–æ–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∞–π—Ç–æ–≤...');
    checkAndNotify();
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è
bot.catch((err, ctx) => {
    console.error(`–û—à–∏–±–∫–∞ –¥–ª—è ${ctx.updateType}:`, err);
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', getMainMenu());
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch().then(() => {
    console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
}).catch(err => {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:', err);
});

// –í–∫–ª—é—á–∞–µ–º –ø–ª–∞–≤–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM')); 